# -*- coding: utf-8 -*-
"""SMA chracterisation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ujl-G1kO7BEkS3et9AZ4lJVXeBo6c8Il
"""

import tensorflow as tf
from tensorflow.keras.layers import *
from tensorflow.keras.models import *
import tensorflow_datasets as tfds
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import confusion_matrix
from sklearn.preprocessing import normalize

def DenseModel():
  inputs = Input(shape=(12,))
  x = Dense(24, activation='relu')(inputs)
  x = Dense(64, activation='relu')(x)
  outputs = Dense(4)(x)

  return Model(inputs=inputs, outputs=outputs)

optimizer = tf.keras.optimizers.Adam(learning_rate=0.03)

model = DenseModel()
model.compile(optimizer, 'mean_squared_error')

df = pd.read_excel('Dataset.xlsx')

df=df.values

train_x=df[:9,:12]
print(train_x)

train_y=df[:9,12:]
test_y=df[9:,12:]

model.fit(train_x,train_y,epochs=80)

model.predict(df[9:,:12])

print(test_y)

model.predict(df[:,:12])

train_y

